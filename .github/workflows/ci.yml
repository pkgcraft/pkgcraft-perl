name: CI

on:
  push:
    branches-ignore: [deploy]
    paths:
      - "lib/**"
      - "t/**"
      - "Makefile.PL"
      - ".github/workflows/ci.yml"
  pull_request:
    branches: [main]
    paths:
      - "lib/**"
      - "t/**"
      - "Makefile.PL"
  workflow_dispatch:
    inputs:
      perl-version:
        required: false
        type: string
  workflow_call:
    inputs:
      perl-version:
        required: false
        type: string

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      perl-version: ${{ steps.vars.outputs.perl-version }}
    steps:
    - name: Checkout code to determine the minimum supported perl version
      if: ${{ inputs.perl-version == '' }}
      uses: actions/checkout@v3
      with:
        repository: pkgcraft/pkgcraft-perl

    - name: Set perl versions to test against
      id: vars
      run: |
        if [[ -n "${{ inputs.perl-version }}" ]]; then
          echo "perl-version=$(jq 'split(",")' -Rc <(echo '${{ inputs.perl-version }}'))" >> $GITHUB_OUTPUT
        else
          min_ver=$(sed -rn "/^\s*MIN_PERL_VERSION / s/.*=> '([0-9](.[0-9]+)*)',/\1/p" Makefile.PL)
          if [[ -n ${min_ver} ]]; then
            echo "perl-version=['${min_ver}', '5']" >> $GITHUB_OUTPUT
          else
            exit 1
          fi
        fi

  test:
    needs: setup
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        perl-version: ${{ fromJson(needs.setup.outputs.perl-version) }}

    steps:
    - name: Set pkgcraft dir env var
      run: echo pkgcraft_dir=~/pkgcraft >> $GITHUB_ENV

    - name: Download prebuilt pkgcraft-c library
      id: download-artifact
      uses: dawidd6/action-download-artifact@v2
      with:
        github_token: ${{ secrets.PKGCRAFT_CI_TOKEN }}
        repo: pkgcraft/pkgcraft
        branch: main
        workflow: pkgcraft-c.yml
        name: pkgcraft-c-${{ runner.os }}
        path: ${{ env.pkgcraft_dir }}

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        repository: pkgcraft/pkgcraft-perl
        submodules: true

    - name: Set up Perl ${{ matrix.perl-version }}
      uses: shogo82148/actions-setup-perl@v1
      id: perl
      with:
        perl-version: ${{ matrix.perl-version }}
        install-modules-with: cpanm
        install-modules-args: -n
        install-modules: Devel::Cover
        working-directory: ..

    - name: Install deps
      run: cpanm -L ../local --installdeps .

    - name: Override build variables
      run: |
        echo "PKG_CONFIG_PATH=${pkgcraft_dir}" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=${pkgcraft_dir}/lib" >> $GITHUB_ENV
        echo "DYLD_LIBRARY_PATH=${pkgcraft_dir}/lib" >> $GITHUB_ENV

    - name: Build and test module
      run: |
        perl Makefile.PL
        make
        PERL5OPT=-MDevel::Cover make test

    - name: Create coverage report
      run: cover -report codecov
      env:
        PERL5LIB: 'perllib:../local/lib/perl5'

    - name: Upload coverage to Codecov
      if: ${{ inputs.perl-version == '' }}
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.json
